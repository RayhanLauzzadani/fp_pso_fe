# Nama workflow untuk deployment ke produksi
name: CD - Deploy to Production

on:
  workflow_run:
    # DIUBAH: Nama workflow sekarang cocok dengan nama file CI Anda
    workflows: ["CI - Lint, Test, Build"]
    types:
      - completed

jobs:
  deploy-to-production:
    # Hanya berjalan jika CI berhasil DAN itu terjadi di branch 'main'
    if: github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main'
    
    runs-on: ubuntu-latest
    
    env:
      # DIUBAH: Project ID sekarang sesuai dengan dashboard GCP Anda
      GCP_PROJECT_ID: fp-pso-462609
      GCP_REGION: asia-southeast2
      GCP_SERVICE_NAME: dooit-app
      GCP_REPOSITORY_NAME: fp-pso-fe

    steps:
      # 1. Checkout kode dari commit yang benar
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      # 2. Authenticate ke Google Cloud menggunakan Service Account Key Anda
      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # 3. Setup Google Cloud SDK
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      # 4. Konfigurasi Docker untuk Artifact Registry
      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      # 5. Build dan Push Docker image dengan TAG UNIK (Commit SHA)
      - name: Build and Push Docker Image
        id: build-image
        run: |
          IMAGE_URL=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY_NAME }}/${{ env.GCP_SERVICE_NAME }}:${{ github.event.workflow_run.head_sha }}
          
          echo "IMAGE_URL=$IMAGE_URL" >> $GITHUB_OUTPUT

          docker build \
            --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} \
            --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} \
            --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} \
            --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} \
            -t $IMAGE_URL .

          docker push $IMAGE_URL

      # 6. Deploy ke Cloud Run
      - name: Deploy to Cloud Run
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: ${{ env.GCP_SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          image: ${{ steps.build-image.outputs.IMAGE_URL }}
          platform: 'managed'
          flags: '--allow-unauthenticated --port=3000'